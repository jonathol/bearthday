{"version":3,"sources":["banner.png","App.js","reportWebVitals.js","index.js"],"names":["DayForm","state","image","imageURL","value","day","month","year","loading","results","currentIdx","handleChange","bind","handleSubmit","this","setState","event","preventDefault","getMonth","toString","length","getDate","dateString","getFullYear","axios","get","then","res","data","Date","alert","current","img","hasImg","className","date","alt","src","onClick","minusSlides","plusSlides","onSubmit","onChange","type","disabled","color","height","width","React","Component","App","banner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b70b2d0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.57fb3841.png\";","import React, { Component } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport Loader from \"react-loader-spinner\";\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport banner from './banner.png';\r\n\r\nclass DayForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      image: false,\r\n      imageURL: '',\r\n      value: '',\r\n      day: '',\r\n      month: '',\r\n      year: '',\r\n      loading: false,\r\n      results: [],\r\n      currentIdx: 0\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({value: value});\r\n  }\r\n\r\n  handleSubmit(event) { \r\n    event.preventDefault();   \r\n\r\n    // kick off loading animation\r\n    this.setState({loading: true, image:false, results: [], currentIdx: 0}); \r\n\r\n    // format day and month for api call\r\n    let month = this.state.value.getMonth()+1\r\n    if (month.toString().length < 2) {\r\n      month = \"0\" + month\r\n    }\r\n    let day = this.state.value.getDate()\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day\r\n    }\r\n\r\n    let dateString = this.state.value.getFullYear() + \"-\" + month + \"-\" + day;\r\n    axios.get(`https://epic.gsfc.nasa.gov/api/natural/date/` + dateString)\r\n      .then(res => {\r\n        const results = res.data;\r\n        // Retrying until I get a result would solve the problem but I have limited\r\n        // amounts of calls so I will only look one year back from the current year.\r\n        // Based off of my experimentations, there's usually something one year back from \r\n        // current year\r\n        if (results.length > 0){\r\n          this.setState({\r\n            results: results,\r\n            currentIdx: 0,\r\n            imageURL: \"https://epic.gsfc.nasa.gov/archive/natural/\" + this.state.value.getFullYear() + \"/\" + month + \"/\" + day + \"/png/\",\r\n            image: true,\r\n            loading: false\r\n          })\r\n        } else {\r\n          let d = new Date();\r\n          let year = d.getFullYear() - 1;\r\n          dateString = year + \"-\" + month + \"-\" + day;\r\n          axios.get(`https://epic.gsfc.nasa.gov/api/natural/date/` + dateString)\r\n            .then(res => {\r\n              const results = res.data;\r\n              if (results.length > 0){\r\n                this.setState({\r\n                  results: results,\r\n                  currentIdx: 0,\r\n                  imageURL: \"https://epic.gsfc.nasa.gov/archive/natural/\" + year + \"/\" + month + \"/\" + day + \"/png/\",\r\n                  image: true,\r\n                  loading: false\r\n                })\r\n              } else {\r\n                alert(\"No Image Available.\")\r\n                this.setState({loading: false, image: false})\r\n              }\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  plusSlides() {\r\n    let current = this.state.currentIdx + 1;\r\n    if (current > this.state.results.length -1) {\r\n      current = 0\r\n    } \r\n    this.setState({\r\n      currentIdx: current,\r\n    })\r\n  }\r\n\r\n  minusSlides() {\r\n    let current = this.state.currentIdx - 1;\r\n    if (current < 0) {\r\n      current = this.state.results.length - 1;\r\n    }\r\n    this.setState({\r\n      currentIdx: current\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let img;\r\n    const hasImg = this.state.image;\r\n    let loading = this.state.loading;\r\n    if (!hasImg) {\r\n      img = <div/>\r\n    } else {\r\n      if (this.state.results.length <= 1) {\r\n        img = (\r\n          <div className=\"DayContainer\">          \r\n            <div>{\"Date: \" + this.state.results[this.state.currentIdx].date}</div>\r\n            <img className=\"DayImage\" alt=\"Earth\" src={this.state.imageURL + this.state.results[this.state.currentIdx].image + \".png\"}/>\r\n          </div>\r\n        )\r\n      } else {\r\n        img = (\r\n          <div className=\"DayContainer\">          \r\n            <div>{\"Date: \" + this.state.results[this.state.currentIdx].date}</div>\r\n            <div className=\"DayCarousel\">\r\n              <img className=\"DayImage\" alt=\"Earth\" src={this.state.imageURL + this.state.results[this.state.currentIdx].image + \".png\"}/>\r\n              <a className=\"prev\" onClick={this.minusSlides.bind(this)}>&#10094;</a>\r\n              <a className=\"next\" onClick={this.plusSlides.bind(this)}>&#10095;</a>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n    }\r\n    return (\r\n      <form className=\"DayForm\" onSubmit={this.handleSubmit}>\r\n        <div className=\"DayInput\">\r\n          <label className=\"DayInputLabel\">\r\n            Birthday:        \r\n          </label>\r\n          <DatePicker\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Submit\" \r\n          disabled={!this.state.value}\r\n          className=\"DayFormSubmit\"\r\n        />\r\n        {img}\r\n        {loading ? <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#000000\"\r\n          height={100}\r\n          width={100}\r\n        /> : <div/>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">      \r\n      <div className=\"BearthdayHeader\">\r\n        <img src={banner} alt=\"banner\" className=\"BearthdayHeaderImg\"/>\r\n        Happy Bearthday!\r\n        <img src={banner} alt=\"banner\" className=\"BearthdayHeaderImg\"/>\r\n      </div>   \r\n      <DayForm/>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport {App, DayForm};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}